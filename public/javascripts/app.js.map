{"version":3,"file":"public\\javascripts\\app.js","sources":["app/application.js","app/initialize.js","app/lib/map_utils.js","app/lib/maplabel.js","app/lib/router.js","app/lib/storm_meta.js","app/lib/view_helper.js","app/models/collection.js","app/models/model.js","app/views/map_styles.js","app/views/map_view.js","app/views/templates/map.hbs","app/views/view.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA,EACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EACA;AACA,CAlBA;AAAA,C,CCAA;AAAA;AACA,EACA;AACA;AACA;AACA;AACA,CANA;AAAA,C,CCAA;AAAA;AACA,EACA;AACA;AACA;AACA;AACA;AACA,EACA;AACA;AACA;AACA;AACA,EACA;AACA,CAdhNA;AAAA,CCAA;AAAA;AACA,EACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAXA;AAAA,C,CCAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EACA;AACA;AACA;AAhJA;AAAA,C,CCAA;AAAA;AACA,CADA;AAAA,C,CCAA;AAAA;AACA;AACA;AACA;AACA,CAJA;AAAA,C,CCAA;AAAA;AACA;AACA;AACA;AACA,CAJA;AAAA,C,CCAA;AAAA;AACA;AACA;AACA,CAHA;AAAA,C,CCAA;AAAA;AACA;AACA;AACA;AACA;AACA,EACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAzHA;AAAA,C,CCAA;AAAA;AACA;AACA;AACA;AACA,CACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAhBA;AAAA,C,CCAA;AAAA;AACA,EACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAtBA;AAAA,C","sourcesContent":["// Application bootstrapper.\r\nApplication = {\r\n    initialize: function() {\r\n        var ActiveTracks = Backbone.Model.extend({url: '/api/active_tracks'});\r\n\tvar activeTracks = new ActiveTracks({storms: window.initialData.activeTracks});\r\n\r\n        var MapView = require('views/map_view')\r\n          , Router   = require('lib/router')\r\n        \r\n        this.mapView = new MapView({model: activeTracks});\r\n        this.router   = new Router()\r\n        \r\n        if (typeof Object.freeze === 'function') Object.freeze(this)\r\n        \r\n    }\r\n}\r\n\r\nmodule.exports = Application\r\n","var application = require('application')\r\n\r\n$(function() {\r\n    application.initialize()\r\n    Backbone.history.start()\r\n})\r\n","TextOverlay.prototype = new google.maps.OverlayView();\r\n\r\nfunction TextOverlay(map, latLng, text) {\r\n\tthis.latlng_ = latlng; \r\n\tthis.map_ = map;\r\n\tthis.text_ = text;\r\n\tthis.div_ = null;\r\n\r\n\tthis.setMap(map);\r\n}\r\nMapUtils = {\r\n}\r\n\r\nmodule.exports = MapUtils;\r\n","/**\n * @license\n *\n * Copyright 2011 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Map Label.\n *\n * @author Luke Mahe (lukem@google.com),\n *         Chris Broadfoot (cbro@google.com)\n */\n\n/**\n * Creates a new Map Label\n * @constructor\n * @extends google.maps.OverlayView\n * @param {Object.<string, *>=} opt_options Optional properties to set.\n */\nfunction MapLabel(opt_options) {\n  this.set('fontFamily', 'sans-serif');\n  this.set('fontSize', 12);\n  this.set('fontColor', '#000000');\n  this.set('strokeWeight', 4);\n  this.set('strokeColor', '#ffffff');\n  this.set('align', 'center');\n\n  this.set('zIndex', 1e3);\n\n  this.setValues(opt_options);\n}\nMapLabel.prototype = new google.maps.OverlayView;\n\nwindow['MapLabel'] = MapLabel;\n\n\n/** @inheritDoc */\nMapLabel.prototype.changed = function(prop) {\n  switch (prop) {\n    case 'fontFamily':\n    case 'fontSize':\n    case 'fontColor':\n    case 'strokeWeight':\n    case 'strokeColor':\n    case 'align':\n    case 'text':\n      return this.drawCanvas_();\n    case 'maxZoom':\n    case 'minZoom':\n    case 'position':\n      return this.draw();\n  }\n};\n\n/**\n * Draws the label to the canvas 2d context.\n * @private\n */\nMapLabel.prototype.drawCanvas_ = function() {\n  var canvas = this.canvas_;\n  if (!canvas) return;\n\n  var style = canvas.style;\n  style.zIndex = /** @type number */(this.get('zIndex'));\n\n  var ctx = canvas.getContext('2d');\n  ctx.clearRect(0, 0, canvas.width, canvas.height);\n  ctx.strokeStyle = this.get('strokeColor');\n  ctx.fillStyle = this.get('fontColor');\n  ctx.font = this.get('fontSize') + 'px ' + this.get('fontFamily');\n\n  var strokeWeight = Number(this.get('strokeWeight'));\n\n  var text = this.get('text');\n  if (text) {\n    if (strokeWeight) {\n      ctx.lineWidth = strokeWeight;\n      ctx.strokeText(text, strokeWeight, strokeWeight);\n    }\n\n    ctx.fillText(text, strokeWeight, strokeWeight);\n\n    var textMeasure = ctx.measureText(text);\n    var textWidth = textMeasure.width + strokeWeight;\n    style.marginLeft = this.getMarginLeft_(textWidth) + 'px';\n    // Bring actual text top in line with desired latitude.\n    // Cheaper than calculating height of text.\n    style.marginTop = '-0.4em';\n  }\n};\n\n/**\n * @inheritDoc\n */\nMapLabel.prototype.onAdd = function() {\n  var canvas = this.canvas_ = document.createElement('canvas');\n  var style = canvas.style;\n  style.position = 'absolute';\n\n  var ctx = canvas.getContext('2d');\n  ctx.lineJoin = 'round';\n  ctx.textBaseline = 'top';\n\n  this.drawCanvas_();\n\n  var panes = this.getPanes();\n  if (panes) {\n    panes.mapPane.appendChild(canvas);\n  }\n};\nMapLabel.prototype['onAdd'] = MapLabel.prototype.onAdd;\n\n/**\n * Gets the appropriate margin-left for the canvas.\n * @private\n * @param {number} textWidth  the width of the text, in pixels.\n * @return {number} the margin-left, in pixels.\n */\nMapLabel.prototype.getMarginLeft_ = function(textWidth) {\n  switch (this.get('align')) {\n    case 'left':\n      return 0;\n    case 'right':\n      return -textWidth;\n  }\n  return textWidth / -2;\n};\n\n/**\n * @inheritDoc\n */\nMapLabel.prototype.draw = function() {\n  var projection = this.getProjection();\n\n  if (!projection) {\n    // The map projection is not ready yet so do nothing\n    return;\n  }\n\n  if (!this.canvas_) {\n    // onAdd has not been called yet.\n    return;\n  }\n\n  var latLng = /** @type {google.maps.LatLng} */ (this.get('position'));\n  if (!latLng) {\n    return;\n  }\n  var pos = projection.fromLatLngToDivPixel(latLng);\n\n  var style = this.canvas_.style;\n\n  style['top'] = pos.y + 'px';\n  style['left'] = pos.x + 'px';\n\n  style['visibility'] = this.getVisible_();\n};\nMapLabel.prototype['draw'] = MapLabel.prototype.draw;\n\n/**\n * Get the visibility of the label.\n * @private\n * @return {string} blank string if visible, 'hidden' if invisible.\n */\nMapLabel.prototype.getVisible_ = function() {\n  var minZoom = /** @type number */(this.get('minZoom'));\n  var maxZoom = /** @type number */(this.get('maxZoom'));\n\n  if (minZoom === undefined && maxZoom === undefined) {\n    return '';\n  }\n\n  var map = this.getMap();\n  if (!map) {\n    return '';\n  }\n\n  var mapZoom = map.getZoom();\n  if (mapZoom < minZoom || mapZoom > maxZoom) {\n    return 'hidden';\n  }\n  return '';\n};\n\n/**\n * @inheritDoc\n */\nMapLabel.prototype.onRemove = function() {\n  var canvas = this.canvas_;\n  if (canvas && canvas.parentNode) {\n    canvas.parentNode.removeChild(canvas);\n  }\n};\nMapLabel.prototype['onRemove'] = MapLabel.prototype.onRemove;\n\nmodule.exports = MapLabel;\n","var application = require('application')\r\n\r\nmodule.exports = Backbone.Router.extend({\r\n    routes: {\r\n        '': 'map'\r\n    },\r\n    \r\n    map: function() {\r\n        $('body').html(application.mapView.render().el)\r\n    }\r\n})\r\n","var stormTcName = {};\r\nstormTcName['damrey'] = '達維'; \r\nstormTcName['kong-rey'] = '康妮'; \r\nstormTcName['nakri'] = '娜基莉'; \r\nstormTcName['krovanh'] = '科羅旺'; \r\nstormTcName['sarika'] = '莎莉嘉'; \r\nstormTcName['haikui'] = '海葵'; \r\nstormTcName['yutu'] = '玉兔'; \r\nstormTcName['fengshen'] = '風神'; \r\nstormTcName['dujuan'] = '杜鵑'; \r\nstormTcName['haima'] = '海馬'; \r\nstormTcName['kirogi'] = '鴻雁'; \r\nstormTcName['toraji'] = '桃芝'; \r\nstormTcName['kalmaegi'] = '海鷗'; \r\nstormTcName['mujigae'] = '彩虹'; \r\nstormTcName['meari'] = '米雷'; \r\nstormTcName['kaitak'] = '啟德'; \r\nstormTcName['manyi'] = '萬宜'; \r\nstormTcName['fungwong'] = '鳳凰'; \r\nstormTcName['choiwan'] = '彩雲'; \r\nstormTcName['maon'] = '馬鞍'; \r\nstormTcName['tembin'] = '天秤'; \r\nstormTcName['usagi'] = '天兔'; \r\nstormTcName['kammuri'] = '北冕'; \r\nstormTcName['koppu'] = '巨爵'; \r\nstormTcName['tokage'] = '蝎虎'; \r\nstormTcName['bolaven'] = '布拉萬'; \r\nstormTcName['pabuk'] = '帕布'; \r\nstormTcName['phanfone'] = '巴蓬'; \r\nstormTcName['champi'] = '薔琵'; \r\nstormTcName['nock_ten'] = '洛坦'; \r\nstormTcName['sanba'] = '三巴'; \r\nstormTcName['wutip'] = '蝴蝶'; \r\nstormTcName['vongfong'] = '黃蜂'; \r\nstormTcName['in-fa'] = '煙花'; \r\nstormTcName['muifa'] = '梅花'; \r\nstormTcName['jelawat'] = '杰拉華'; \r\nstormTcName['sepat'] = '聖帕'; \r\nstormTcName['nuri'] = '鸚鵡'; \r\nstormTcName['melor'] = '茉莉'; \r\nstormTcName['merbok'] = '苗柏'; \r\nstormTcName['ewiniar'] = '艾雲尼'; \r\nstormTcName['fitow'] = '菲特'; \r\nstormTcName['sinlaku'] = '森拉克'; \r\nstormTcName['nepartak'] = '尼伯特'; \r\nstormTcName['nanmadol'] = '南瑪都'; \r\nstormTcName['maliksi'] = '馬力斯'; \r\nstormTcName['danas'] = '丹娜絲'; \r\nstormTcName['hagupit'] = '黑格比'; \r\nstormTcName['lupit'] = '盧碧'; \r\nstormTcName['talas'] = '塔拉斯'; \r\nstormTcName['kaemi'] = '格美'; \r\nstormTcName['nari'] = '百合'; \r\nstormTcName['changmi'] = '薔薇'; \r\nstormTcName['mirinae'] = '銀河'; \r\nstormTcName['noru'] = '奧鹿'; \r\nstormTcName['prapiroon'] = '派比安'; \r\nstormTcName['vipa'] = '韋帕'; \r\nstormTcName['megkhla'] = '米克拉'; \r\nstormTcName['nida'] = '妮妲'; \r\nstormTcName['kularb'] = '玫瑰'; \r\nstormTcName['maria'] = '瑪莉亞'; \r\nstormTcName['francisco'] = '范斯高'; \r\nstormTcName['higos'] = '海高斯'; \r\nstormTcName['omais'] = '奧麥斯'; \r\nstormTcName['roke'] = '洛克'; \r\nstormTcName['son-tinh'] = '山神'; \r\nstormTcName['lekima'] = '利奇馬'; \r\nstormTcName['bavi'] = '巴威'; \r\nstormTcName['conson'] = '康森'; \r\nstormTcName['sonca'] = '桑卡'; \r\nstormTcName['bopha'] = '安比'; \r\nstormTcName['krosa'] = '羅莎'; \r\nstormTcName['maysak'] = '美莎克'; \r\nstormTcName['chanthu'] = '燦都'; \r\nstormTcName['nesat'] = '納沙'; \r\nstormTcName['wukong'] = '悟空'; \r\nstormTcName['haiyan'] = '海燕'; \r\nstormTcName['haishen'] = '海神'; \r\nstormTcName['dianmu'] = '電母'; \r\nstormTcName['haitang'] = '海棠'; \r\nstormTcName['sonamu'] = '清松'; \r\nstormTcName['podul'] = '楊柳'; \r\nstormTcName['noul'] = '紅霞'; \r\nstormTcName['mindulle'] = '蒲公英'; \r\nstormTcName['nalgae'] = '尼格'; \r\nstormTcName['shanshan'] = '珊珊'; \r\nstormTcName['lingling'] = '玲玲'; \r\nstormTcName['dolphin_chi'] = '白海豚'; \r\nstormTcName['lionrock_chi'] = '獅子山'; \r\nstormTcName['banyan_c'] = '榕樹'; \r\nstormTcName['yagi'] = '摩羯'; \r\nstormTcName['kajiki'] = '劍魚'; \r\nstormTcName['kujira'] = '鯨魚'; \r\nstormTcName['kompasu'] = '圓規'; \r\nstormTcName['washi'] = '天鴿'; \r\nstormTcName['leepi'] = '麗琵'; \r\nstormTcName['faxai'] = '法茜'; \r\nstormTcName['chan_hom'] = '燦鴻'; \r\nstormTcName['namtheun'] = '南川'; \r\nstormTcName['pakhar'] = '帕卡'; \r\nstormTcName['bebinca'] = '貝碧嘉'; \r\nstormTcName['peipah'] = '琵琶'; \r\nstormTcName['linfa'] = '蓮花'; \r\nstormTcName['malou'] = '瑪瑙'; \r\nstormTcName['sanvu'] = '珊瑚'; \r\nstormTcName['rumbia'] = '溫比亞'; \r\nstormTcName['tapah'] = '塔巴'; \r\nstormTcName['nangka'] = '浪卡'; \r\nstormTcName['meranti'] = '莫蘭蒂'; \r\nstormTcName['mawar'] = '瑪娃'; \r\nstormTcName['soulik'] = '蘇力'; \r\nstormTcName['mitag'] = '米娜'; \r\nstormTcName['soudelor'] = '蘇迪羅'; \r\nstormTcName['rai'] = '雷伊'; \r\nstormTcName['guchol'] = '古超'; \r\nstormTcName['cimaron'] = '西馬侖'; \r\nstormTcName['hagibis'] = '海貝思'; \r\nstormTcName['molave'] = '莫拉菲'; \r\nstormTcName['malakas'] = '馬勒卡'; \r\nstormTcName['talim'] = '泰利'; \r\nstormTcName['chebi'] = '飛燕'; \r\nstormTcName['noguri'] = '浣熊'; \r\nstormTcName['koni'] = '天鵝'; \r\nstormTcName['megi'] = '鮎魚'; \r\nstormTcName['doksuri'] = '杜蘇芮'; \r\nstormTcName['mangkhut'] = '山竹'; \r\nstormTcName['rammasun'] = '威馬遜'; \r\nstormTcName['atsani'] = '艾莎尼'; \r\nstormTcName['chaba'] = '暹芭'; \r\nstormTcName['khanun'] = '卡努'; \r\nstormTcName['utor'] = '尤特'; \r\nstormTcName['matmo'] = '麥德姆'; \r\nstormTcName['etau'] = '艾濤'; \r\nstormTcName['aere'] = '艾利'; \r\nstormTcName['vicente'] = '韋森特'; \r\nstormTcName['trami'] = '潭美'; \r\nstormTcName['halong'] = '夏浪'; \r\nstormTcName['vamco'] = '環高'; \r\nstormTcName['songda'] = '桑達'; \r\nstormTcName['saola'] = '蘇拉'; \r\n\r\nmodule.exports = {\r\n\tstormTcName: stormTcName\r\n}","// Put handlebars.js helpers here\r\n","// Base class for all collections\r\nmodule.exports = Backbone.Collection.extend({\r\n    \r\n})\r\n","// Base class for all models\r\nmodule.exports = Backbone.Model.extend({\r\n    \r\n})\r\n","module.exports = {\r\n\tneutralBlue: [{\"featureType\":\"water\",\"elementType\":\"geometry\",\"stylers\":[{\"color\":\"#193341\"}]},{\"featureType\":\"landscape\",\"elementType\":\"geometry\",\"stylers\":[{\"color\":\"#2c5a71\"}]},{\"featureType\":\"road\",\"elementType\":\"geometry\",\"stylers\":[{\"color\":\"#29768a\"},{\"lightness\":-37}]},{\"featureType\":\"poi\",\"elementType\":\"geometry\",\"stylers\":[{\"color\":\"#406d80\"}]},{\"featureType\":\"transit\",\"elementType\":\"geometry\",\"stylers\":[{\"color\":\"#406d80\"}]},{\"elementType\":\"labels.text.stroke\",\"stylers\":[{\"visibility\":\"on\"},{\"color\":\"#3e606f\"},{\"weight\":2},{\"gamma\":0.84}]},{\"elementType\":\"labels.text.fill\",\"stylers\":[{\"color\":\"#ffffff\"}]},{\"featureType\":\"administrative\",\"elementType\":\"geometry\",\"stylers\":[{\"weight\":0.6},{\"color\":\"#1a3541\"}]},{\"elementType\":\"labels.icon\",\"stylers\":[{\"visibility\":\"off\"}]},{\"featureType\":\"poi.park\",\"elementType\":\"geometry\",\"stylers\":[{\"color\":\"#2c5a71\"}]}]\r\n}\r\n","var View     = require('./view'),\r\n    template = require('./templates/map')\r\n    mapStyles = require('./map_styles')\r\n    TextOverlay = require('../lib/maplabel');\r\n    stormMeta = require('../lib/storm_meta');\r\n\r\nmodule.exports = View.extend({\r\n    id: 'map-view',\r\n    template: template,\r\n    map: null,\r\n    initialize: function() {\r\n    \tView.prototype.initialize.call(this);\r\n    },\r\n    afterRender: function() {\r\n    \tthis.initMap();\r\n\tthis.drawTracks(this.model.get('storms'));\r\n    },\r\n    initMap: function() {\r\n        var mapOptions = {\r\n            center: new google.maps.LatLng(17.43, 117.25),\r\n            zoom: 6,\r\n            mapTypeId: google.maps.MapTypeId.ROAD,\r\n            panControl: false,\r\n            zoomControl: true,\r\n            mapTypeControl: false,\r\n            scaleControl: false,\r\n            streetViewControl: false,\r\n            overviewMapControl: false,\r\n\t    styles: mapStyles.neutralBlue\r\n        };\r\n\r\n        map = new google.maps.Map(this.el, mapOptions);\r\n    },\r\n    drawTracks: function(storms) {\r\n        var track;\r\n\tvar strengthColor = ['#000000', '#009900', '#0000FF', '#FF0000', '#FF96C8', '#8C1E78'];\r\n\t_.each(storms, function(storm) {\r\n\t\tfor (var i=0; i<storm.pastTrack.length; ++i) {\r\n\t\t\tvar startPt = storm.pastTrack[i];\r\n\t\t\tvar endPt;\r\n\t\t\tif (i < storm.pastTrack.length-1) {\r\n\t\t\t\tendPt = storm.pastTrack[i+1];\r\n\t\t\t} else {\r\n\t\t\t\tendPt = storm.currentPos;\r\n\t\t\t}\r\n\r\n\t\t\tvar linePath = [\r\n\t\t\t\tnew google.maps.LatLng(Number(startPt.lat), Number(startPt.lng)),\r\n\t\t\t\tnew google.maps.LatLng(Number(endPt.lat), Number(endPt.lng))\r\n\t\t\t];\r\n\t\t\ttrack = new google.maps.Polyline({\r\n\t\t\t    path: linePath,\r\n\t\t\t    geodesic: true,\r\n\t\t\t    strokeColor: strengthColor[this.getStrength(Number(startPt.centerWind))],\r\n\t\t\t    strokeOpacity: 0.8,\r\n\t\t\t    strokeWeight: 2\r\n\t\t\t});\r\n\t\t\ttrack.setMap(map);\r\n\t\t}\r\n\t\t\r\n\t\tvar dashedLineSymbol = {\r\n\t\t\tpath: 'M 0,-2 0,2',\r\n\t\t        strokeOpacity: 0.8,\r\n\t\t\tscale: 2\r\n\t\t};\r\n\t\tfor (var i=1; i<storm.forecastTrack.length; ++i) {\r\n\t\t\tvar startPt;\r\n\t\t\tif (i == 1) {\r\n\t\t\t\tstartPt = storm.currentPos;\r\n\t\t\t} else {\r\n\t\t\t\tstartPt = storm.forecastTrack[i-1];\r\n\t\t\t}\r\n\t\t\tvar endPt = storm.forecastTrack[i];\r\n\t\t\tvar linePath = [\r\n\t\t\t        new google.maps.LatLng(Number(startPt.lat), Number(startPt.lng)),\r\n\t\t\t\tnew google.maps.LatLng(Number(endPt.lat), Number(endPt.lng))\r\n\t\t\t];\r\n\t\t\ttrack = new google.maps.Polyline({\r\n\t\t\t    path: linePath,\r\n\t\t\t    geodesic: true,\r\n\t\t\t    strokeOpacity: 0,\r\n\t\t\t    strokeColor: strengthColor[this.getStrength(Number(startPt.centerWind))],\r\n\t\t\t    strokeWeight: 2,\r\n\t\t\t    icons: [{\r\n\t\t\t\ticon: dashedLineSymbol,\r\n\t\t\t\toffset: '0',\r\n\t\t\t\trepeat: '20px'\r\n\t\t\t    }]\r\n\t\t\t});\r\n\t\t\ttrack.setMap(map);\r\n\t\t}\r\n\r\n\t\tvar stormNameOverlay = new TextOverlay({\r\n\t\t\ttext: stormMeta.stormTcName[storm.name.toLowerCase()] || storm.name,\r\n\t\t\tposition: new google.maps.LatLng(Number(storm.currentPos.lat), Number(storm.currentPos.lng)),\r\n\t\t\tmap: map,\r\n\t\t\tfontSize: 18,\r\n\t\t\tfontFamily: 'Arial, \"文泉驛正黑\", \"WenQuanYi Zen Hei\", \"儷黑 Pro\", \"LiHei Pro\", \"微軟正黑體\", \"Microsoft JhengHei\", sans-serif',\r\n\t\t\talign: 'left',\r\n\t\t\tstrokeWeight: 3,\r\n\t\t\tfontColor: '#FFFFFF',\r\n\t\t\tstrokeColor: '#000000'\r\n\t\t});\r\n\t}, this);\r\n    },\r\n    getStrength: function(centerSpeed) {\r\n\tif (centerSpeed >= 185) {\r\n\t\treturn 5;\r\n\t} else if (centerSpeed >= 150) {\r\n\t\treturn 4;\r\n\t} else if (centerSpeed >= 118) {\r\n\t\treturn 3;\r\n\t} else if (centerSpeed >= 88) {\r\n\t\treturn 2;\r\n\t} else if (centerSpeed >= 63) {\r\n\t\treturn 1;\r\n\t} else {\r\n\t\treturn 0;\r\n\t}\r\n    }\r\n})\r\n","var __templateData = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  \n\n\n  return \"<div></div>\\r\\n\";\n  });\nif (typeof define === 'function' && define.amd) {\n  define([], function() {\n    return __templateData;\n  });\n} else if (typeof module === 'object' && module && module.exports) {\n  module.exports = __templateData;\n} else {\n  __templateData;\n}","require('lib/view_helper')\r\n\r\n// Base class for all views\r\nmodule.exports = Backbone.View.extend({\r\n    \r\n    initialize: function(){\r\n        this.render = _.bind(this.render, this)\r\n    },\r\n    \r\n    template: function(){},\r\n    getRenderData: function(){},\r\n    \r\n    render: function(){\r\n        this.$el.html(this.template(this.getRenderData()))\r\n\r\n        this.afterRender()\r\n        return this\r\n    },\r\n    \r\n    afterRender: function(){}\r\n    \r\n})\r\n"]}
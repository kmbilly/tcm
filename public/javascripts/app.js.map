{"version":3,"file":"public\\javascripts\\app.js","sources":["app/application.js","app/initialize.js","app/lib/router.js","app/lib/view_helper.js","app/models/collection.js","app/models/model.js","app/views/map_styles.js","app/views/map_view.js","app/views/templates/map.hbs","app/views/view.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA,EACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EACA;AACA,CAlBA;AAAA,C,CCAA;AAAA;AACA,EACA;AACA;AACA;AACA;AACA,CANA;AAAA,C,CCAA;AAAA;AACA,EACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAXA;AAAA,C,CCAA;AAAA;AACA,CADA;AAAA,C,CCAA;AAAA;AACA;AACA;AACA;AACA,CAJA;AAAA,C,CCAA;AAAA;AACA;AACA;AACA;AACA,CAJA;AAAA,C,CCAA;AAAA;AACA;AACA;AACA,CAHA;AAAA,C,CCAA;AAAA;AACA;AACA;AACA,EACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAhEA;AAAA,C,CCAA;AAAA;AACA;AACA;AACA;AACA,CACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAhBA;AAAA,C,CCAA;AAAA;AACA,EACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAtBA;AAAA,C","sourcesContent":["// Application bootstrapper.\r\nApplication = {\r\n    initialize: function() {\r\n        var ActiveTracks = Backbone.Model.extend({url: '/api/active_tracks'});\r\n\tvar activeTracks = new ActiveTracks({storms: window.initialData.activeTracks});\r\n\r\n        var MapView = require('views/map_view')\r\n          , Router   = require('lib/router')\r\n        \r\n        this.mapView = new MapView({model: activeTracks});\r\n        this.router   = new Router()\r\n        \r\n        if (typeof Object.freeze === 'function') Object.freeze(this)\r\n        \r\n    }\r\n}\r\n\r\nmodule.exports = Application\r\n","var application = require('application')\r\n\r\n$(function() {\r\n    application.initialize()\r\n    Backbone.history.start()\r\n})\r\n","var application = require('application')\r\n\r\nmodule.exports = Backbone.Router.extend({\r\n    routes: {\r\n        '': 'map'\r\n    },\r\n    \r\n    map: function() {\r\n        $('body').html(application.mapView.render().el)\r\n    }\r\n})\r\n","// Put handlebars.js helpers here\r\n","// Base class for all collections\r\nmodule.exports = Backbone.Collection.extend({\r\n    \r\n})\r\n","// Base class for all models\r\nmodule.exports = Backbone.Model.extend({\r\n    \r\n})\r\n","module.exports = {\r\n\tneutralBlue: [{\"featureType\":\"water\",\"elementType\":\"geometry\",\"stylers\":[{\"color\":\"#193341\"}]},{\"featureType\":\"landscape\",\"elementType\":\"geometry\",\"stylers\":[{\"color\":\"#2c5a71\"}]},{\"featureType\":\"road\",\"elementType\":\"geometry\",\"stylers\":[{\"color\":\"#29768a\"},{\"lightness\":-37}]},{\"featureType\":\"poi\",\"elementType\":\"geometry\",\"stylers\":[{\"color\":\"#406d80\"}]},{\"featureType\":\"transit\",\"elementType\":\"geometry\",\"stylers\":[{\"color\":\"#406d80\"}]},{\"elementType\":\"labels.text.stroke\",\"stylers\":[{\"visibility\":\"on\"},{\"color\":\"#3e606f\"},{\"weight\":2},{\"gamma\":0.84}]},{\"elementType\":\"labels.text.fill\",\"stylers\":[{\"color\":\"#ffffff\"}]},{\"featureType\":\"administrative\",\"elementType\":\"geometry\",\"stylers\":[{\"weight\":0.6},{\"color\":\"#1a3541\"}]},{\"elementType\":\"labels.icon\",\"stylers\":[{\"visibility\":\"off\"}]},{\"featureType\":\"poi.park\",\"elementType\":\"geometry\",\"stylers\":[{\"color\":\"#2c5a71\"}]}]\r\n}\r\n","var View     = require('./view'),\r\n    template = require('./templates/map')\r\n    mapStyles = require('./map_styles')\r\n\r\nmodule.exports = View.extend({\r\n    id: 'map-view',\r\n    template: template,\r\n    map: null,\r\n    initialize: function() {\r\n    \tView.prototype.initialize.call(this);\r\n    },\r\n    afterRender: function() {\r\n    \tthis.initMap();\r\n\tthis.drawTracks(this.model.get('storms'));\r\n    },\r\n    initMap: function() {\r\n        var mapOptions = {\r\n            center: new google.maps.LatLng(17.43, 117.25),\r\n            zoom: 6,\r\n            mapTypeId: google.maps.MapTypeId.ROAD,\r\n            panControl: false,\r\n            zoomControl: true,\r\n            mapTypeControl: false,\r\n            scaleControl: false,\r\n            streetViewControl: false,\r\n            overviewMapControl: false,\r\n\t    styles: mapStyles.neutralBlue\r\n        };\r\n\r\n        map = new google.maps.Map(this.el, mapOptions);\r\n    },\r\n    drawTracks: function(storms) {\r\n        var coordinates, track;\r\n\t_.each(storms, function(storm) {\r\n\t\tcoordinates = [];\r\n\t\t_.each(storm.pastTrack, function(pos) {\r\n\t\t\tcoordinates.push(new google.maps.LatLng(Number(pos.lat), Number(pos.lng)));\r\n\t\t});\r\n\t\tcoordinates.push(new google.maps.LatLng(Number(storm.currentPos.lat),Number(storm.currentPos.lng)));\r\n\t\ttrack = new google.maps.Polyline({\r\n\t\t    path: coordinates,\r\n\t\t    geodesic: true,\r\n\t\t    strokeColor: '#FF0000',\r\n\t\t    strokeOpacity: 1.0,\r\n\t\t    strokeWeight: 2\r\n\t\t});\r\n\t\ttrack.setMap(map);\r\n\t\t\r\n\t\tcoordinates = [];\r\n\t\tcoordinates.push(new google.maps.LatLng(Number(storm.currentPos.lat),Number(storm.currentPos.lng)));\r\n\t\t_.each(storm.forecastTrack, function(pos) {\r\n\t\t\tcoordinates.push(new google.maps.LatLng(Number(pos.lat), Number(pos.lng)));\r\n\t\t});\r\n\t\ttrack = new google.maps.Polyline({\r\n\t\t    path: coordinates,\r\n\t\t    geodesic: true,\r\n\t\t    strokeColor: '#FF0000',\r\n\t\t    strokeOpacity: 0.8,\r\n\t\t    strokeWeight: 1\r\n\t\t});\r\n\t\ttrack.setMap(map);\r\n\t});\r\n    }\r\n})\r\n","var __templateData = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  \n\n\n  return \"<div></div>\\r\\n\";\n  });\nif (typeof define === 'function' && define.amd) {\n  define([], function() {\n    return __templateData;\n  });\n} else if (typeof module === 'object' && module && module.exports) {\n  module.exports = __templateData;\n} else {\n  __templateData;\n}","require('lib/view_helper')\r\n\r\n// Base class for all views\r\nmodule.exports = Backbone.View.extend({\r\n    \r\n    initialize: function(){\r\n        this.render = _.bind(this.render, this)\r\n    },\r\n    \r\n    template: function(){},\r\n    getRenderData: function(){},\r\n    \r\n    render: function(){\r\n        this.$el.html(this.template(this.getRenderData()))\r\n\r\n        this.afterRender()\r\n        return this\r\n    },\r\n    \r\n    afterRender: function(){}\r\n    \r\n})\r\n"]}